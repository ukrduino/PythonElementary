NEED TO KNOW

1. Inheritance in Python.

    В Python помимо простого наследования возможно множественное наследование,
    для наследования от нескольких классов их нужно указать в скобках после имени класса.
    Атрибуты класса ищутся в описании самого класса потом — слева направо в
    родительских объектах, потом — в родительских объектах этих
    родительских объектов.
    В то время как иерархия наследования прослеживается с права на лево.
    При поиске используется MRO (method resolution order).
    Посмотреть порядок поиска можно в свойстве класса __mro__

2. What does mixin mean?

     Mixin в Python - это разновидность класса которая применяется для добавления в
     другой класс какой либо функциональности или данных (через множественное наследование).
     Сам по себе mixin (как класс) не предназначен для использования отдельно.
     При использовании mixin важен порядок указания их в скобках после имени файла.

3. Difference between new and old style classes.

    Старые классы имели собственное название которое можно было посмотреть в __class__,
    но тип(type) экземпляра класса всегда был 'instance'. Кроме того все старые классы могли
    не наследоваться от какого либо класса.
    Новые классы всегда наследуются от какого либо класса или от базового класса object.
    Новые классы всегда имеют тип соответствующий классу т.е в новых классах это одно и тоже

4. How to define a class?

   Для этого используется инструкция class. Это составная инструкция, которая состоит из строки заголовка и тела.
   Заголовок состоит из ключевого слова class, имени класса и, возможно, названий суперклассов в скобках.
   Тело класса состоит из блока различных инструкций. Тело должно иметь отступ (как и любые вложенные
   конструкции в языке Python).

5. What is the difference between class attribute and instance attribute?
    Атрибуты класса доступны всем экземплярам этого класса, а атрибуты экземпляра доступны только
    данному экземпляру. Атрибуты класса например можно использовать для подсчета количества
    созданных экземпляров класса. К атрибутам класса можно получить доступ как через сам класс так
    и через его экземпляры.

6. What does magic methods mean?
    Магические методы позволяют изменить поведение классов, реакцию классов на встроенные функции, вызов этих методов
    не производится на прямую, а происходит зачастую из встроенных функций

    Operator   magic method
    +          object.__add__(self, other)
    -          object.__sub__(self, other)

    Можно например изменить поведение экземпляра класса при вызове функции add() к нему

7. How to check if an object is an instance of a particular type?

    1. С помощью функции isinstance().
    2. С помощью функции type()

8. What does duck-typing mean?

    Утиная типизация - динамическая типизация. Т.е. обращаясь к экземпляру какого либо
    класса(например одного из коллекций) мы можем не интересоваться какого именно он класса,
    а просто использовать его в цикле подразумевая что он является iterable.

9. What is public, private and protected attributes in Python?

    В Python все атрибуты по умолчанию public если это специально не
    отмечено в имени атрибута. Что бы сделать атрибут protected перед именем пишется одно
    подчеркивание _, что бы сделать private два подчеркивания __,

10. What does name mangling mean?

    Name mangling(изменение имени атрибута) испольуется для правильного доступа к
    private атрибутам в иерархии наследования. К имени атрибута с двумя подчеркиваниями
    спереди добавляется имя класса с одним подчёркиванием.
